@use "sass:map";
@use '../abstracts/variables' as *;
@use '../abstracts/mixins' as *;

.filter-input {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  
  .filter-input-container {
    display: flex;
    gap: 0.5rem;
    align-items: center;
  }
  
  .filter-input-operator {
    width: 70px;
  }
  
  .filter-input-values {
    display: flex;
    gap: 0.5rem;
    align-items: center;
    flex: 1;
  }
  

  .filter-value-input {
    width: 50px;
    padding: 0.5rem;
    border: 1px solid map.get($colors, 'dark', 'border');
    border-radius: 4px;
    background: map.get($colors, 'dark', 'bg-secondary');
    color: map.get($colors, 'dark', 'text');
    appearance: textfield;
    
    &:focus {
      outline: none;
      border-color: map.get($colors, 'dark', 'primary');
    }

    &::-webkit-outer-spin-button,
    &::-webkit-inner-spin-button {
      -webkit-appearance: none;
      margin: 0;
    }

    -moz-appearance: textfield;

    .light-theme & {
      border-color: map.get($colors, 'light', 'border');
      background: map.get($colors, 'light', 'bg-secondary');
      color: map.get($colors, 'light', 'text');
      
      &:focus {
        border-color: map.get($colors, 'light', 'primary');
      }
    }

    &.error-validation {
      border-color: map.get($colors, 'dark', 'error');
      
      &:focus {
        border-color: map.get($colors, 'dark', 'error');
      }

      .light-theme & {
        border-color: map.get($colors, 'light', 'error');
      }
    }
  }
  
  .filter-input-separator {
    color: map.get($colors, 'dark', 'text-secondary');
    padding: 0 0.25rem;

    .light-theme & {
      color: map.get($colors, 'light', 'text-secondary');
    }
  }

  .filter-input-error {
    color: map.get($colors, 'dark', 'error');
    font-size: 0.2rem;
    width: 100%;
    text-align: left;

    .light-theme & {
      color: map.get($colors, 'light', 'error');
    }
  }
} 